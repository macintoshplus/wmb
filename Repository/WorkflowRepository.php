<?php

namespace JbNahan\Bundle\WorkflowManagerBundle\Repository;

use Doctrine\ORM\EntityRepository;
use JbNahan\Bundle\WorkflowManagerBundle\Entity\DefinitionSearch;

/**
 * WorkflowRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class WorkflowRepository extends EntityRepository
{
    /**
     * @param int $workflowId
     * @return ArrayCollection
     */
    public function getQbWithSearch(DefinitionSearch $param){
        $qb = $this->createQueryBuilder('w');
        if (null !== $param->getName()) {
            $qb->andWhere($qb->expr()->like('w.name', $qb->expr()->literal('%'.$param->getName().'%')));
        }
        //Limite aux roles
        if (is_array($param->getRolesForUpdate()) && !empty($param->getRolesForUpdate())) {
            $expr = '';
            foreach ($param->getRolesForUpdate() as $role) {
                $expr .= ($expr===''? '':' OR ') . 'w.roleForUpdate like \'%'.$role.'%\'';
            }

            $qb->andWhere($qb->expr()->literal('(' . $expr . ')'));

        }
        /*if (null !== $param->get()) {
            $qb->andWhere('w. =')
            ->setParameter('', $param->get());
        }*/

        return $qb;
    }
}
